openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Todo app'
  description: 'A simple API for managing tasks in a TODO list.'

servers:
  - url: 'https://api.example.com/todo'
    description: 'Demo TODO list server'

paths:
  /tasks:
    get:
      summary: 'Get all tasks'
      responses:
        '200':
          description: 'List of tasks'
          content:
            application/json:
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/Task'

    post:
      summary: 'Add a new task'
      requestBody:
        description: 'Task to add'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: 'Task successfully added'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{taskId}:
    get:
      summary: 'Get a single task'
      parameters:
        - name: 'taskId'
          in: 'path'
          required: true
          description: 'ID of the task to retrieve'
          schema:
            type: 'integer'
      responses:
        '200':
          description: 'Task details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: 'Task not found'

    put:
      summary: 'Update a task'
      parameters:
        - name: 'taskId'
          in: 'path'
          required: true
          description: 'ID of the task to update'
          schema:
            type: 'integer'
      requestBody:
        description: 'Task details to update'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: 'Task successfully updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: 'Task not found'

    delete:
      summary: 'Delete a task'
      parameters:
        - name: 'taskId'
          in: 'path'
          required: true
          description: 'ID of the task to delete'
          schema:
            type: 'integer'
      responses:
        '204':
          description: 'Task successfully deleted'
        '404':
          description: 'Task not found'

components:
  schemas:
    Task:
      type: 'object'
      properties:
        id:
          type: 'integer'
          description: 'Task ID'
          readOnly: true
        title:
          type: 'string'
          description: 'Task title'
        completed:
          type: 'boolean'
          description: 'Whether the task is completed or not'
      required:
        - 'id'
        - 'title'
        - 'completed'

    TaskInput:
      type: 'object'
      properties:
        title:
          type: 'string'
          description: 'Task title'
        completed:
          type: 'boolean'
          description: 'Whether the task is completed or not'
      required:
        - 'title'
